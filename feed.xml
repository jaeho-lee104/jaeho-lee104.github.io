<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://jaeho-lee104.github.io/</id><title>jaeho's blog</title><subtitle>blog</subtitle> <updated>2021-08-08T04:09:29+08:00</updated> <author> <name>leejaeho</name> <uri>https://jaeho-lee104.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://jaeho-lee104.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://jaeho-lee104.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 leejaeho </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Android TV 에서 charles proxy 설정</title><link href="https://jaeho-lee104.github.io/posts/charles-proxy-with-android-tv/" rel="alternate" type="text/html" title="Android TV 에서 charles proxy 설정" /><published>2021-08-08T00:42:00+08:00</published> <updated>2021-08-08T00:42:00+08:00</updated> <id>https://jaeho-lee104.github.io/posts/charles-proxy-with-android-tv/</id> <content src="https://jaeho-lee104.github.io/posts/charles-proxy-with-android-tv/" /> <author> <name>leejaeho</name> </author> <category term="Android" /> <summary> Charles를 이용하여 네트워크 트래픽을 보려면 현재 연결되어 있는 네트워크에 proxy 설정을 해주면 된다. https 와 같이 ssl proxying 이 필요한 경우에는 Charles 인증서를 설치해주어야 한다. 인증서 별도 설치가 필요한 이유에 대해 간단히 설명하면, Charles 는 Client &amp;lt;-&amp;gt; Charles (proxy) &amp;lt;-&amp;gt; Server 의 형태로 통신하며, 중간자 역할을 한다. 이 때, Client는 Server의 인증서를 보는 대신 Charles가 동적으로 생성하고, 자체 루트 인증서로 서명한(Charles CA Certificate) 인증서를 본다. Charles는 서버의 인증서를 받고, Client는 Charles의 인증서를 받는다. C... </summary> </entry> <entry><title>Kotlin SAM</title><link href="https://jaeho-lee104.github.io/posts/kotlin-sam/" rel="alternate" type="text/html" title="Kotlin SAM" /><published>2021-07-28T23:19:00+08:00</published> <updated>2021-07-29T20:02:39+08:00</updated> <id>https://jaeho-lee104.github.io/posts/kotlin-sam/</id> <content src="https://jaeho-lee104.github.io/posts/kotlin-sam/" /> <author> <name>leejaeho</name> </author> <category term="Kotlin" /> <summary> android를 kotlin으로 개발하다보면 다음과 같은 코드를 자주 작성하게 된다. view.setOnClickListener { ... } 코틀린 특성상 메소드의 마지막 파라미터가 람다식인 경우 () 뒤에 { ... } 블록을 작성할 수 있다. 하지만 view.setOnClickListener 메소드를 확인해보면 다음과 같이 정의되어 있다. public void setOnClickListener(@Nullable OnClickListener l) { ... } 여기서 OnClickListener 는 public interface OnClickListener { void onClick(View v); } setOnClickListener의 파라미터인 OnCli... </summary> </entry> <entry><title>fresco 로컬 asset 파일 읽기</title><link href="https://jaeho-lee104.github.io/posts/fresco-with-assets/" rel="alternate" type="text/html" title="fresco 로컬 asset 파일 읽기" /><published>2021-07-28T14:56:00+08:00</published> <updated>2021-07-28T14:56:00+08:00</updated> <id>https://jaeho-lee104.github.io/posts/fresco-with-assets/</id> <content src="https://jaeho-lee104.github.io/posts/fresco-with-assets/" /> <author> <name>leejaeho</name> </author> <category term="Android" /> <summary> webp 또는 그 외 다른 이미지 파일들을 app assets 폴더에 저장하고 사용하는 케이스가 있다. 보통 fresco 는 웹 상의 이미지를 로드하기에 편리해서 사용했는데 로컬에 있는 파일을 읽어들일 때는 어떻게 하면 될까. 단순히 절대경로나 상대경로를 사용해서는 안된다. fresco 문서에 보면 지원하는 uri 타입들에 대해 다음과 같이 정의해두었다. https://frescolib.org/docs/supported-uris.html type scheme fetch method used File on network http://, https:// HttpURLConnection or... </summary> </entry> <entry><title>android navigation 사용시 백스택 추가하지 않고 이동</title><link href="https://jaeho-lee104.github.io/posts/navigation-popup/" rel="alternate" type="text/html" title="android navigation 사용시 백스택 추가하지 않고 이동" /><published>2021-07-27T00:31:00+08:00</published> <updated>2021-07-27T01:12:06+08:00</updated> <id>https://jaeho-lee104.github.io/posts/navigation-popup/</id> <content src="https://jaeho-lee104.github.io/posts/navigation-popup/" /> <author> <name>leejaeho</name> </author> <category term="Android" /> <summary> navigation 을 통해 이동시 몇 가지 옵션을 통해 백스택 설정을 할 수 있다. https://developer.android.com/reference/androidx/navigation/NavOptions.Builder#summary setPopUpTo 를 보면, 동작은 navigating 전에 일어나고, 지정된 destination 을 찾을 때까지 백스택에서 일치하지 않는 모든 destination 을 팝한다고 한다. inclusive 는 true일 경우 지정한 destination까지 pop. 따라서 A -&amp;gt; B로 갈 때, A를 popUpTo destination으로 지정하고 inclusive true 로 설정하면 된다. Splash 화면과 같은 일회성 화면에 popUpT... </summary> </entry> <entry><title>git commit name, email 설정</title><link href="https://jaeho-lee104.github.io/posts/git-config/" rel="alternate" type="text/html" title="git commit name, email 설정" /><published>2021-07-26T00:45:00+08:00</published> <updated>2021-07-26T00:56:15+08:00</updated> <id>https://jaeho-lee104.github.io/posts/git-config/</id> <content src="https://jaeho-lee104.github.io/posts/git-config/" /> <author> <name>leejaeho</name> </author> <category term="Git" /> <summary> 전체 repository 에 name, email 설정 터미널 열기 git config –global user.name “NAME” git config –global user.email “EMAIL@example.com” git config –list 로 확인 repository 별 name, email 설정 터미널 열기 git config user.name “NAME” git config –local user.name “NAME” 과 같음 git config user.email “EMAIL@example.com” cat .git/config 로 확인 </summary> </entry> </feed>
